---
import { config } from "../config";
import type CategoryList from "../types/categoryList";

interface Props {
  categories: CategoryList[];
  selected: string;
}

const { categories, selected } = Astro.props as Props;
---

<section class="categoryBox">
  <div class="scrollbox">
    {
      categories.map((c) => (
        <a href={`${config.base}/categories/${c.name}`} class={`categoryLink${selected===c.name? ' selected': ''}`}>
          {c.name} <span class="count">({c.count})</span>
        </a>
      ))
    }
  </div>
</section>

<style>
  section {
    --background-color: var(--principal-background-color);
  }

  .categoryBox {
    padding: 0 10px;
    margin-top: 1rem;
    margin-bottom: calc(1rem + 0.5rem);
    max-width: var(--max-width-container);
    margin-inline: auto;
  }

  .scrollbox {
    position: relative;
    height: 100%;
    overflow-x: auto;
    padding: 1rem;

    display: flex;
    flex-direction: row;
    gap: 14px;
  }

  .categoryLink {
    background: var(--background-color);
    color: var(--principal-text-color);
    padding: 0.4em 1.2em;
    font-size: 1.08rem;
    font-weight: 600;
    text-decoration: none;
    border-radius: 5px;
    transition:
      background 0.18s,
      color 0.18s,
      transform 0.15s;
    box-shadow: 1px 1px 7px gray;

    display: flex;
    align-items: center;
    gap: 0.3em;
  }

  .categoryLink.selected,
  .categoryLink:hover,
  .categoryLink:focus {
    background-color: var(--principal-background-color-dark);
    color: #fff;
  }

  .count {
    font-size: 0.98em;
    border-radius: 6px;
    font-weight: 500;
    box-shadow: 0 1px 4px rgba(163, 174, 214, 0.07);
  }

  @media screen and (min-width: 1000px) {
    .categoryBox {
      max-width: 1080px;
    }

    .scrollbox {
      justify-content: center;
    }

  }
</style>
