---
import { Astronav, MenuIcon, MenuItems } from "astro-navbar";
import { config } from "../config";
import { Image } from "astro:assets";
import logoFD from "../assets/logoFD.svg";
---

<header>
  <Astronav closeOnClick>
    <div class="headerContainer">
      <div class="logoContainer">
        <a href={config.base}>
          <Image src={logoFD} alt="Logo" class="logoImg" />
          <h1>
            {config.pageTitle}
            <span class="hidden">{config.pagesSubTitle}</span>
          </h1>
        </a>
      </div>

      <div class="navMenu">
        <MenuIcon class="menuIcon" />
      </div>
    </div>
  </Astronav>

  <MenuItems class="itemsBox hidden">
    <ul>
      <li><a href={config.base}>Inicio</a></li>
      <li><a href={`${config.base}/about`}>Sobre nosotros</a></li>
      <li>
        <a href={`${config.base}/carrito`} class="navLink cartLink">
          ðŸ›’ Carrito
          <span id="cartCount" class="cartCount"></span>
        </a>
      </li>
    </ul>
  </MenuItems>
</header>

<style>
  header {
    --background-color: var(--principal-background-color);
    --background-color-dark: var(--principal-background-color-dark);
    --background-color-light: var(--principal-background-color-light);
    --text-color: var(--principal-text-color);
    --menu-size: 3rem;
    --header-icon-size: 65px;

    margin-bottom: 0.5rem;
  }

  .headerContainer {
    width: 100%;
    padding: 0.5rem;
    background: var(--background-color);

    box-shadow: 0 4px 24px 0 rgba(163, 174, 214, 0.1);
    border-radius: 0 0 18px 18px;

    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logoContainer a {
    display: flex;
    align-items: center;
    gap: 14px;
    text-decoration: none;
  }

  .logoImg {
    width: var(--header-icon-size);
    height: var(--header-icon-size);

    filter: drop-shadow(0 2px 8px #a7c7e7aa);
    border-radius: 12px;
    background: var(--secondary-background-color);
    padding: 0px;
  }

  .logoContainer h1 {
    font-size: 1.5rem;
    font-weight: 300;
    color: var(--text-color);
    letter-spacing: 1px;
    margin: 0;
    text-shadow: 0 2px 8px #c3aed655;
    font-family: "Poppins", "Segoe UI", Arial, sans-serif;
  }

  .menuIcon {
    width: var(--menu-size);
    height: var(--menu-size);
    font-size: 2.2rem;
    color: #232946;
    background: var(--secondary-background-color);
    border-radius: 8px;
    padding: 6px;
    box-shadow: 0 2px 8px #a7c7e7aa;
  }
  .menuIcon:hover,
  .menuIcon:focus {
    background: var(--background-color-dark);
    color: #fff;
  }

  :global(#astronav-menu) {
    background-color: transparent;
    border: none;
    cursor: pointer;
    background-image: none;
    color: inherit;

    display: flex;
    align-items: center;
    justify-content: center;
  }

  .itemsBox {
    width: 100%;
    height: 100%;
    background-color: #ffffffc9;
    box-shadow: 0 4px 24px 0 rgba(163, 174, 214, 0.1);
    padding-block: 0.5rem;

    position: absolute;
    right: 0;
    z-index: 100;
    transition: 0.5s;
    overflow-x: hidden;
  }
  .itemsBox.hidden {
    display: block;
    width: 0;
  }
  .itemsBox ul {
    list-style: none;
    width: 80%;
    max-width: 400px;

    float: right;
    display: flex;
    flex-direction: column;
    gap: 5px;
    transition: 1.5s;
  }
  .itemsBox.hidden ul {
    width: 0;
  }
  .itemsBox li a {
    display: block;
    color: var(--background-color-light);
    font-weight: 600;
    text-decoration: none;
    font-size: 1.1rem;
    border-radius: 6px;
    padding: 1rem 2rem;
    background: var(--background-color-dark);
    overflow-x: hidden;
    text-wrap: nowrap;
  }
  .itemsBox li a:hover,
  .itemsBox li a:focus {
    background: var(--background-color);
    color: var(--text-color);
  }

  .mainNav {
    display: flex;
    gap: 1.2em;
    align-items: center;
  }
  .navLink {
    color: #232946;
    text-decoration: none;
    font-weight: 600;
    font-size: 1.08em;
    padding: 0.3em 1em;
    border-radius: 8px;
    transition:
      background 0.18s,
      color 0.18s;
  }
  .navLink:hover,
  .navLink:focus {
    /* background: linear-gradient(90deg, #a7c7e7 40%, #fff5ba 100%); */
    background: var(--background-color);
    color: #232946;
  }
  /* .cartLink {
    position: relative;
    background: linear-gradient(90deg, #b7eac5 40%, #a7c7e7 100%);
  } */
  .cartCount {
    position: absolute;
    top: -8px;
    right: -12px;
    background: #f7cac9;
    color: #232946;
    border-radius: 50%;
    font-size: 0.85em;
    padding: 0.1em 0.5em;
    font-weight: bold;
    min-width: 1.5em;
    text-align: center;
    display: none;
  }

  @media screen and (min-width: 1000px) {
    .headerContainer {
      justify-content: center;
      border-radius: 0;
      padding: 2rem;
    }

    .logoContainer h1 .hidden {
      display: initial;
    }
    .logoImg {
      width: 7rem;
      height: 7rem;
    }

    .navMenu {
      display: none;
    }

    .itemsBox,
    .itemsBox.hidden,
    .itemsBox ul,
    .itemsBox.hidden ul {
      height: auto;
      width: initial;
      max-width: none;
      position: relative;
      padding-block: 0;
      background-color: var(--background-color-dark);
      box-shadow: none;
      transition: none;

      display: flex;
      flex-direction: row;
      gap: 5px;
      align-items: center;
      justify-content: center;
    }
    .itemsBox li a {
      border-radius: 0;
      padding: 1rem;
      color: var(--background-color-light);
      background-color: transparent;
    }
  }
</style>

<script type="module">
  // Mostrar cantidad de productos en el carrito
  window.updateCartCount = function () {
    const carrito = JSON.parse(localStorage.getItem("carrito") || "[]");
    const count = carrito.reduce((acc, p) => acc + (p.cantidad || 1), 0);
    const cartCount = document.getElementById("cartCount");
    if (cartCount) {
      if (count > 0) {
        cartCount.textContent = count;
        cartCount.style.display = "inline-block";
      } else {
        cartCount.style.display = "none";
      }
    }
  };

  // Llama una vez al cargar
  window.updateCartCount();

  // Opcional: actualiza en tiempo real si el carrito cambia en otra pestaÃ±a
  window.addEventListener("storage", (e) => {
    if (e.key === "carrito") window.updateCartCount();
  });
</script>
