---
import { cargarProductos } from "../../utils/loadCSV";
import Layout from "../../layouts/Layout.astro";
import { config } from "../../config";

export function getStaticPaths() {
  const productos = cargarProductos();

  return productos.map((p) => {
    const { id, relacionados, ...rest } = p;

    const productosRelacionados = productos.filter((p) =>
      relacionados.includes(p.id)
    );

    return {
      params: { id },
      props: { id, productosRelacionados, ...rest },
    };
  });
}

const {
  id,
  name,
  img,
  price,
  categories,
  paymentLink,
  description,
  productosRelacionados: relacionados,
} = Astro.props;
---

<Layout>
  <!-- <a href="javascript:history.back()" class="backBtn">‚Üê Volver</a> -->
  <section class="productContainer">
    <div class="product_main">
      <div class="imgContainer">
        {img.map((i) => <img src={i} alt="" />)}
      </div>

      <div class="infoBox">
        <h2 class="name">{name}</h2>

        <div class="categories">
          {
            categories.map((c) => (
              <a href={`${config.base}/categories/${c}`} class="categoryTag">
                {c}
              </a>
            ))
          }
        </div>

        <p class="description">{description}</p>

        <span class="price">${price}</span>

        <div class="paymentsMethods">
          {
            paymentLink.map((p) => (
              <a
                href={p.url}
                target="_blank"
                rel="noopener noreferrer"
                class="paymentLink"
                id="paymentLink"
              >
                {p.id}
              </a>
            ))
          }
        </div>

        <!-- TODO: fix this -->
        <!-- <form id="addToCartForm" class="addToCartForm" on:submit="return false;"> -->
        <form id="addToCartForm" class="addToCartForm">
          <label>
            Cantidad:
            <input type="number" id="cartQty" min="1" value="1" />
          </label>
          <button
            type="button"
            id="addToCartBtn"
            class="addCartBtn"
            data-id={Astro.props.id}
          >
            Agregar al carrito üõí
          </button>
        </form>
      </div>
    </div>

    {
      relacionados.length > 0 && (
        <div class="relacionados">
          <h2>Relacionados</h2>
          <div class="relacionados_lista">
            {relacionados.map((p) => (
              <div class="producto">
                <a href={`${config.base}/producto/${p.id}`} class="cart">
                  {p.img.map((i) => (
                    <>
                      <img src={i} alt="" />
                      <span>{p.name}</span>
                    </>
                  ))}
                </a>
              </div>
            ))}
          </div>
        </div>
      )
    }
  </section>
</Layout>

<style>
  .productContainer {
    /* width: fit-content; */
    max-width: 1100px;

    padding: 2rem;
    margin: 24px auto;
    background-color: var(--principal-background-color);
    border-radius: 12px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }

  .product_main {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    align-items: flex-start;
    margin-bottom: 2rem;
  }

  .imgContainer {
    flex: 1;
    height: 100%;
    display: flex;
    min-width: 300px;
  }
  .imgContainer img {
    width: 100%;
    aspect-ratio: 1/1;
    object-fit: contain;
    border-radius: 14px;
    background: #fff;
    box-shadow: 0 2px 8px #a7c7e733;
  }

  .infoBox {
    border-radius: 0 0 14px 14px;
    padding: 24px 18px;
    box-shadow: 0 2px 12px #c3aed633;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  .infoBox h2 {
    font-weight: 800;
    letter-spacing: 1px;
  }
  .infoBox .description {
    text-transform: lowercase;
    font-size: 1.08rem;
  }

  .categories {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5em;
  }
  .categoryTag {
    background-color: var(--principal-background-color-light);
    color: inherit;
    border-radius: 5px;
    padding: 0.18em 0.8em;
    font-size: 0.98em;
    font-weight: 500;
    text-decoration: none;
    transition: 0.3s ease;
  }
  .categoryTag:hover,
  .categoryTag:focus {
    background-color: var(--principal-background-color-dark);
    color: #fff;
  }

  .price {
    font-size: 1.25rem;
    font-weight: bold;
    border-radius: 10px;
    letter-spacing: 0.5px;
  }

  .paymentsMethods {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5em;
    margin-top: 0.7em;
  }
  .paymentLink {
    display: inline-block;
    background: linear-gradient(90deg, #a7c7e7 40%, #c3aed6 100%);
    color: #232946;
    border-radius: 8px;
    padding: 0.18em 0.8em;
    font-size: 1em;
    font-weight: 600;
    text-decoration: none;
    transition:
      background 0.15s,
      color 0.15s,
      transform 0.15s;
    box-shadow: 0 1px 3px #a7c7e733;
  }
  .paymentLink:hover,
  .paymentLink:focus {
    background: linear-gradient(90deg, #f7cac9 40%, #b7eac5 100%);
    color: #232946;
    transform: scale(1.05);
  }

  .backBtn {
    display: inline-block;
    margin: 24px 0 0 24px;
    padding: 0.5em 1.2em;
    background: linear-gradient(90deg, #a7c7e7 40%, #fff5ba 100%);
    color: #232946;
    border-radius: 8px;
    font-weight: 600;
    font-size: 1rem;
    text-decoration: none;
    box-shadow: 0 2px 8px #a7c7e733;
    transition:
      background 0.18s,
      color 0.18s,
      transform 0.15s;
    border: none;
    cursor: pointer;
  }
  .backBtn:hover,
  .backBtn:focus {
    background: linear-gradient(90deg, #f7cac9 40%, #b7eac5 100%);
    color: #232946;
    transform: scale(1.04);
    text-decoration: underline;
  }
  .addToCartForm {
    display: flex;
    gap: 0.7em;
    align-items: center;
    margin-top: 1em;
  }
  .addToCartForm input[type="number"] {
    width: 60px;
    padding: 0.2em 0.5em;
    border-radius: 6px;
    border: 1px solid #c3aed6;
    font-size: 1em;
  }
  .addCartBtn {
    background-color: var(--principal-background-color-dark);
    color: #fff;
    border-radius: 8px;
    font-weight: 600;
    font-size: 1em;
    padding: 0.75rem 2em;
    border: none;
    cursor: pointer;
    transition:
      color 0.18s,
      transform 0.15s;
  }
  .addCartBtn:hover,
  .addCartBtn:focus {
    background-color: var(--principal-text-color);
  }

  .relacionados_lista {
    display: flex;
    overflow-x: auto;
    gap: 1rem;
    padding-inline: 0.5rem;
    padding-bottom: 0.5rem;
  }
  .relacionados_lista .producto {
    width: 200px;
    flex-shrink: 0;
    padding: 1rem;
    background-color: var(--principal-background-color-light);
    border-radius: 12px;
  }
  .relacionados_lista .producto img {
    width: 100%;
    aspect-ratio: 1/1;
    object-fit: contain;
    height: 120px;
  }
  .relacionados_lista .producto a {
    text-decoration: none;
    color: inherit;
  }
  .relacionados_lista .producto span {
    white-space: wrap;
    display: block;
  }

  @media screen and (min-width: 1000px) {
    .infoBox {
      width: 35%;
      height: 100%;
    }
    .relacionados_lista {
      padding-inline: 0;
    }
    .relacionados_lista .producto {
      width: 250px;
    }
  }
</style>

<script type="module">
  const addBtn = document.getElementById("addToCartBtn");
  const qtyInput = document.getElementById("cartQty");
  const price = document
    .querySelector(".price")
    .innerText.replace("$", "")
    .replace(",", ".");
  const name = document.querySelector(".name").innerText;
  const id = addBtn?.getAttribute("data-id");
  const img = document.querySelector(".imgContainer img")?.src || "";
  addBtn?.addEventListener("click", () => {
    const qty = parseInt(qtyInput.value, 10) || 1;
    const product = {
      id: id,
      name: name,
      price: price,
      cantidad: qty,
      img: img,
    };
    let carrito = [];
    try {
      carrito = JSON.parse(localStorage.getItem("carrito") || "[]");
    } catch {}
    // Si ya existe, suma cantidad
    const idx = carrito.findIndex((p) => p.id === product.id);
    if (idx >= 0) {
      carrito[idx].cantidad += qty;
    } else {
      carrito.push(product);
    }
    localStorage.setItem("carrito", JSON.stringify(carrito));
    window.updateCartCount && window.updateCartCount();
    addBtn.textContent = "¬°Agregado!";
    setTimeout(() => (addBtn.textContent = "Agregar al carrito üõí"), 1200);
  });
</script>
